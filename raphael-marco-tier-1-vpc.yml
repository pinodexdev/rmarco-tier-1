AWSTemplateFormatVersion: "2010-09-09"
Description: "Apper DevOps Engineer Technical Challenge - Raphael Marco - Tier 1"

Parameters:
  ProjectName:
    Type: String
    Default: "raphael-marco-tier-1"

  Environment:
    Type: String
    Default: "dev"

  VpcCidrBlock:
    Type: String
    Default: "10.99.0.0/16"

  VpcSubnetPrivatePrimaryCidrBlock:
    Type: String
    Default: "10.99.1.0/24"

  VpcSubnetPrivateSecondaryCidrBlock:
    Type: String
    Default: "10.99.2.0/24"

  VpcSubnetPublicPrimaryCidrBlock:
    Type: String
    Default: "10.99.3.0/24"

  VpcSubnetPublicSecondaryCidrBlock:
    Type: String
    Default: "10.99.4.0/24"

Resources:
  # Main VPC
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "vpc" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  VpcInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "ig" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  VpcToVpcInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref VpcInternetGateway

  # Start private subnet

  # Private subnet in first region availability zone
  VpcSubnetPrivatePrimary:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref VpcSubnetPrivatePrimaryCidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "private-primary" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # Private subnet in second region availability zone
  VpcSubnetPrivateSecondary:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref VpcSubnetPrivateSecondaryCidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "private-secondary" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # Route table for private subnets
  VpcRouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "private" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  VpcSubnetPrivatePrimaryRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref VpcSubnetPrivatePrimary
      RouteTableId: !Ref VpcRouteTablePrivate

  VpcSubnetPrivateSecondaryRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref VpcSubnetPrivateSecondary
      RouteTableId: !Ref VpcRouteTablePrivate

  # End private subnet

  # Start public subnet

  # Public subnet in first region availability zone
  VpcSubnetPublicPrimary:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref VpcSubnetPublicPrimaryCidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "public-primary" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # Public subnet in second region availability zone
  VpcSubnetPublicSecondary:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref VpcSubnetPublicSecondaryCidrBlock
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "public-secondary" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # Route table for public subnets
  VpcRouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "public" ] ]
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  VpcSubnetPublicPrimaryToVpcRouteTablePublic:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref VpcSubnetPublicPrimary
      RouteTableId: !Ref VpcRouteTablePublic

  VpcSubnetPublicSecondaryToVpcRouteTablePublic:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref VpcSubnetPublicSecondary
      RouteTableId: !Ref VpcRouteTablePublic

  VpcRouteTablePublicToVpcInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref VpcRouteTablePublic
      GatewayId: !Ref VpcInternetGateway
      DestinationCidrBlock: "0.0.0.0/0"

  # End public subnet

Outputs:
  VpcId:
    Description: "Tier 1 VPC"
    Value: !Ref Vpc

  VpcSubnetPrivatePrimaryId:
    Description: "Tier 1 private subnet in first region availability zone"
    Value: !Ref VpcSubnetPrivatePrimary

  VpcSubnetPrivateSecondaryId:
    Description: "Tier 1 private subnet in second region availability zone"
    Value: !Ref VpcSubnetPrivateSecondary

  VpcSubnetPublicPrimaryId:
    Description: "Tier 1 public subnet in first region availability zone"
    Value: !Ref VpcSubnetPublicPrimary

  VpcSubnetPublicSecondaryId:
    Description: "Tier 1 public subnet in second region availability zone"
    Value: !Ref VpcSubnetPublicSecondary
